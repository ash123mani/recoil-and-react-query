import Head from 'next/head';
import { useRouter } from 'next/router';
import { GetServerSideProps } from 'next';
import Image from 'next/image';
import csln from '@/styles/details.module.css';
import type { Book } from '@/types';
import { getBookList } from '@/apis';

interface BookDetailsProps {
  data: {
    book: Book;
    bookIndex: number;
    pageIndex: number;
  };
}

export default function BookDetails(props: BookDetailsProps) {
  const { data } = props;
  const router = useRouter();
  const { book } = data;

  if (!book) {
    router.push('/');
  }

  const { title, coverImage, discountRate, price } = book || {};
  return (
    <>
      <Head>
        <title>Book Details</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${csln.main}`}>
        <h1 className={csln.title}>{title}</h1>
        <Image src={coverImage} height={450} width={375} alt={title} />
        <div className={csln['book-info']}>
          <h2>{title}</h2>
          <p className={csln.description}>
            Description of the book... Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem
            Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a
            galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but
            also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s
            with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop
            publishing software like Aldus PageMaker including versions of Lorem Ipsum.
          </p>
          <div className={csln['price-details']}>
            <div className={csln['discount']}>{discountRate}%</div>
            <div className={csln['price']}>{price}</div>
          </div>
        </div>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (props) => {
  const { query } = props;
  const { pageIndex, bookIndex } = query;
  const books = await getBookList(Number(pageIndex) + 1);
  const book = books.data[Number(bookIndex)] || {};

  if (!pageIndex || !bookIndex) {
    return {
      redirect: {
        permanent: false,
        destination: '/',
      },
    };
  }

  return {
    props: {
      data: {
        book,
        pageIndex,
        bookIndex,
      },
    },
  };
};
